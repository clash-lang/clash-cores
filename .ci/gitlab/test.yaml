include:
  - '/.ci/gitlab/common.yaml'

stages:
  - build
  - test

.test-nocache:
  extends: .common
  needs: ["build"]
  stage: test
  cache:
    paths: []
  before_script:
    - unset HACKAGE_PASSWORD
    - export GHC_ABI=$(ghc --info | grep "Project Unit Id" | tail -c 7 | cut -c 1-4)
    - export THREADS=$(./.ci/effective_cpus.sh)
    - export CABAL_JOBS=$(./.ci/effective_cpus.sh)
    - export CABAL_DIR=$HOME/.cabal
    - export
    - tar -xf dist.tar.zst -C /

    # Not all packages in the cache get packed into dist.tar.zst, so we need to
    # regenerate the package database.
    - |
      if [ -z $GHC_ABI ]; then
        ghc-pkg recache --package-db=$HOME/.cabal/store/ghc-$GHC_VERSION/package.db;
      else
        ghc-pkg recache --package-db=$HOME/.cabal/store/ghc-$GHC_VERSION-$GHC_ABI/package.db;
      fi
  after_script:

.test-cache-local:
  extends: .common-local
  needs: ["build"]
  stage: test
  before_script:
    - unset HACKAGE_PASSWORD
    - export GHC_ABI=$(ghc --info | grep "Project Unit Id" | tail -c 7 | cut -c 1-4)
    - export THREADS=$(./.ci/effective_cpus.sh)
    - export CABAL_JOBS=$(./.ci/effective_cpus.sh)
    - export CABAL_DIR=$HOME/.cabal
    - export
    - tar -xf cache.tar.zst -C / || true
    - tar -xf dist.tar.zst -C /
    - .ci/setup.sh

    # Not all packages in the cache get packed into dist.tar.zst, so we need to
    # regenerate the package database.
    - |
      if [ -z $GHC_ABI ]; then
        ghc-pkg recache --package-db=$HOME/.cabal/store/ghc-$GHC_VERSION/package.db;
      else
        ghc-pkg recache --package-db=$HOME/.cabal/store/ghc-$GHC_VERSION-$GHC_ABI/package.db;
      fi
  after_script:
    - tar -cf - /root/.cabal/packages | zstd -T$THREADS -3 > cache.tar.zst

# 'build' publishes its build files as an artifact. These build files are reused
# by the tests below.
build:
  extends: .common-local
  artifacts:
    when: always
    name: "$CI_JOB_NAME-clash-$CLASH_BRANCH-$CI_COMMIT_SHA-$GHC_VERSION"
    paths:
      - dist.tar.zst
    expire_in: 1 day
  script:
    - .ci/build.sh

    # Archive all build files (from .cabal and dist-newstyle)
    - .ci/get_build_dist.sh | tar -cf - --anchored --exclude=$GIT_ROOT/dist-newstyle/src -T - | zstd -T$THREADS -15 > dist.tar.zst

# Tests run on shared runners:

doctests:
  extends: .test-nocache
  script:
    - bin/clash-cores:doctests -j$THREADS

unittests:
  extends: .test-nocache
  script:
    - bin/clash-cores:unittests -j$THREADS --hide-successes

# Tests run on local fast machines:

suite:
  extends: .test-cache-local
  script:
    - source /opt/tools/Xilinx/Vivado/2022.1/settings64.sh
    - bin/clash-cores-test-suite:clash-cores-test-suite -j$THREADS --hide-successes
  tags:
    - local
    - vivado-2022.1-standard
